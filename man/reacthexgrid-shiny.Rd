% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reacthexgrid.R
\name{reacthexgrid-shiny}
\alias{reacthexgrid-shiny}
\alias{reacthexgridOutput}
\alias{renderReacthexgrid}
\alias{reacthexgrid_html}
\title{Shiny bindings for reacthexgrid}
\usage{
reacthexgridOutput(outputId, width = "100\%", height = "400px")

renderReacthexgrid(expr, env = parent.frame(), quoted = FALSE)

reacthexgrid_html(id, style, class, ...)
}
\arguments{
\item{outputId}{output variable to read from}

\item{width}{Must be a valid CSS unit (like \code{"100\%"},
\code{"400px"}, \code{"auto"}) or a number, which will be coerced to a
string and have \code{"px"} appended.}

\item{height}{Must be a valid CSS unit (like \code{"100\%"},
\code{"400px"}, \code{"auto"}) or a number, which will be coerced to a
string and have \code{"px"} appended.}

\item{expr}{An expression that generates a reacthexgrid}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}

\item{id, style, class}{attributes of the widget's root element}

\item{...}{Arguments passed on to \code{htmltools::tagList}
\describe{
  \item{}{}
}}
}
\description{
Output and render functions for using reacthexgrid within Shiny
applications and interactive Rmd documents.
}
